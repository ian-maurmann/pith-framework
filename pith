#!/usr/bin/env php
<?php declare(strict_types=1);

// Set folder
chdir(__DIR__);

// Error logging
ini_set('log_errors', '1');
ini_set('error_log', './php_errors.log');
ini_set('display_errors', '1');
ini_set('display_startup_errors', '1');
error_reporting(E_ALL);

// Set STDOUT if not already set
if(!defined('STDOUT')){
    define('STDOUT', fopen('php://stdout', 'wb'));
}

$has_front_controller = false;
$has_composer_autoload = false;

if(@include './front-controller.php'){
    $has_front_controller = true;
}

if(!$has_front_controller){
    if(@include './vendor/autoload.php'){
        $has_composer_autoload = true;
    }
}

if($has_front_controller){
    $pith_command_tool = new Pith\Framework\Plugin\CommandTool2\PithCommandTool2();
    $pith_command_tool->run();
}
elseif($has_composer_autoload){
    $normal_cli_text = "\033[0m";
    $red_cli_text = "\033[91m";
    $yellow_cli_text = "\033[93m";
    $green_cli_text = "\033[92m";

    $output = $red_cli_text . '✘ ' . $yellow_cli_text . 'No front-controller detected yet.' . $normal_cli_text . "\n";

    fwrite(STDOUT, $output);

    //$pith_command_tool = new Pith\Framework\Plugin\CommandTool2\PithCommandTool2();
    //$pith_command_tool->run();

    // Check for env.php
    $has_env_dot_php = false;
    if(@include './env.php'){
        $has_env_dot_php = true;
    }

    // Emit message after checking for env.php
    if($has_env_dot_php){
        $output = $green_cli_text . '✔ env.php detected.' . $normal_cli_text . "\n";
        fwrite(STDOUT, $output);
    }
    else{
        $output = $red_cli_text . '✘ ' . $yellow_cli_text . 'No env.php detected yet.' . $normal_cli_text . "\n";
        fwrite(STDOUT, $output);
    }

    // Check for tracked-constants.php
    $has_tracked_constants = false;
    if(@include './tracked-constants.php'){
        $has_tracked_constants = true;
    }

    // Emit message after checking for tracked-constants.php
    if($has_tracked_constants){
        $output = $green_cli_text . '✔ tracked-constants.php detected.' . $normal_cli_text . "\n";
        fwrite(STDOUT, $output);
    }
    else{
        $output = $red_cli_text . '✘ ' . $yellow_cli_text . 'No tracked-constants.php detected yet.' . $normal_cli_text . "\n";
        fwrite(STDOUT, $output);
    }




    // Set up the Container
    $container = new DI\Container();
}
else{
    $normal_cli_text = "\033[0m";
    $red_cli_text = "\033[91m";
    $blue_cli_text = "\033[94m";
    $black_cli_bg   = "\033[40m";
    $white_cli_text = "\033[97m";

    $message = $red_cli_text . "Encountered a Problem. Autoload is not working yet.\n\n"
        . "WHAT TO DO NEXT:\n"
        . "---> Check if you are in the correct folder:\n"
        . $normal_cli_text . '        Maybe we just aren\'t inside the project directory?' . "\n"
        . $red_cli_text . "---> If composer.phar does not exist in this folder, install Composer:\n"
        . $normal_cli_text . '        Follow the directions at ' . $blue_cli_text . 'https://getcomposer.org/download/' . $normal_cli_text . "\n"
        . $red_cli_text . "---> If composer.phar exists, try running Composer install:\n"
        . $normal_cli_text . '        Run: ' . $black_cli_bg . $white_cli_text . 'php composer.phar install' . $normal_cli_text . "\n"
        . $red_cli_text . "---> See what Composer has installed:\n"
        . $normal_cli_text . '        Run: ' . $black_cli_bg . $white_cli_text . 'php composer.phar show' . $normal_cli_text . "\n"
    ;

    fwrite(STDOUT, $message);
}